console.log("‚úÖ Script de envio de efetivo carregado!");

// URL do seu Apps Script
const URL_APPS_SCRIPT = 'https://script.google.com/macros/s/AKfycbyhTsgQhQVQbjqQci8q4rykBsMDDGAR9FHuCYD2ly93kh3LR18aZ4z3RXi8vkmc9ZZRZw/exec';

// Fun√ß√£o para enviar dados para a planilha
async function enviarParaPlanilhaEfetivo(dadosFormatados) {
    try {
        console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
        console.log("üì§ INICIANDO ENVIO PARA PLANILHA");
        console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");

        console.log("üìä Total de registros:", dadosFormatados.length);

        // Verifica o primeiro registro em detalhes
        if (dadosFormatados.length > 0) {
            console.log("üîç AN√ÅLISE DO PRIMEIRO REGISTRO:");
            const primeiro = dadosFormatados[0];
            console.log("  üìÖ Data:", primeiro.data, "| Tipo:", typeof primeiro.data);
            console.log("  üïê Hor√°rio:", primeiro.horario, "| Tipo:", typeof primeiro.horario);
            console.log("  üë• Equipe:", primeiro.equipe, "| Tipo:", typeof primeiro.equipe);
            console.log("  üìã Categoria:", primeiro.categoria, "| Tipo:", typeof primeiro.categoria);
            console.log("  üë§ Colaborador:", primeiro.colaborador, "| Tipo:", typeof primeiro.colaborador);
        }

        // Prepara o payload
        const payload = { registros: dadosFormatados };
        const payloadString = JSON.stringify(payload);

        console.log("üì¶ Payload completo (JSON):");
        console.log(payloadString);

        console.log("üìè Tamanho do payload:", payloadString.length, "caracteres");

        // Verifica se o hor√°rio est√° presente no JSON
        const temHorario = payloadString.includes('"horario"');
        console.log("üîç Campo 'horario' presente no JSON?", temHorario ? "‚úÖ SIM" : "‚ùå N√ÉO");

        if (temHorario) {
            const matchHorario = payloadString.match(/"horario":"([^"]+)"/);
            if (matchHorario) {
                console.log("üïê Valor do hor√°rio no JSON:", matchHorario[1]);
            }
        }

        console.log("üöÄ Enviando requisi√ß√£o para:", URL_APPS_SCRIPT);

        await fetch(URL_APPS_SCRIPT, {
            method: 'POST',
            mode: 'no-cors',
            headers: {
                'Content-Type': 'application/json'
            },
            body: payloadString
        });

        console.log("‚úÖ Requisi√ß√£o enviada com sucesso!");
        console.log("‚è≥ Aguarde alguns segundos e verifique a planilha.");
        console.log("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");

        return true;

    } catch (erro) {
        console.error("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
        console.error("‚ùå ERRO AO ENVIAR:");
        console.error(erro);
        console.error("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ");
        return false;
    }
}

// Enviar automaticamente ao clicar em "Copiar"
document.addEventListener('DOMContentLoaded', function() {
    const btnCopiar = document.getElementById("copiarBtn");

    if (btnCopiar) {
        btnCopiar.addEventListener("click", async function() {
            console.log("üñ±Ô∏è Bot√£o 'Copiar' clicado!");

            setTimeout(async () => {
                const texto = document.getElementById("resultado").value.trim();

                if (!texto) {
                    console.warn("‚ö†Ô∏è Nenhum texto encontrado no textarea.");
                    return;
                }

                console.log("üìù Texto capturado do textarea (primeiros 100 caracteres):");
                console.log(texto.substring(0, 100) + "...");

                // Converte texto em estrutura tabular (fun√ß√£o do auxiliar.js)
                console.log("üîÑ Chamando textoParaTabelaEfetivo...");
                const dadosFormatados = textoParaTabelaEfetivo(texto);

                if (dadosFormatados.length > 0) {
                    console.log("‚úÖ Dados formatados com sucesso!");
                    await enviarParaPlanilhaEfetivo(dadosFormatados);
                } else {
                    console.warn("‚ö†Ô∏è Nenhum registro v√°lido encontrado no texto.");
                }
            }, 500);
        });
    } else {
        console.error("‚ùå Bot√£o 'copiarBtn' n√£o encontrado no DOM!");
    }
});